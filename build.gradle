buildscript {
    ext.kotlinVersion = '1.8.20'
    repositories {
        google()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'org.jmailen.gradle:kotlinter-gradle:3.16.0'
        classpath "org.owasp:dependency-check-gradle:8.2.1"
        classpath "com.cookpad.android.licensetools:license-tools-plugin:1.7.0"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:4.0.0.2929"
    }
}

plugins {
    id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
}

ext {
    projectGroup = 'com.sudoplatform'
}

if(project.file("${rootProject.projectDir}/util/internal-repo.gradle").exists()) {
    apply from: "${rootProject.projectDir}/util/internal-repo.gradle"
}
else {
    ext["internalRepoUsername"] = ""
    ext["internalRepoPassword"] = ""
    ext["internalSnapshotRepoUrl"] = ""
    ext["internalSnapshotRepoName"] = ""
    ext["internalReleaseRepoUrl"] = ""
    ext["internalReleaseRepoName"] = ""
    ext["sonatypeStagingProfileId"] = ""
}

if (project.findProperty("tag") && sonatypeStagingProfileId) {
    nexusPublishing {
        repositories {
            sonatype {
                stagingProfileId = sonatypeStagingProfileId
                username = nexusUsername
                password = nexusPassword
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}
